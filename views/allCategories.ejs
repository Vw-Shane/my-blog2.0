<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Blog</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/styles.css">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <style>
    .category-row {
        overflow-x: scroll;
        white-space: nowrap;
        margin-bottom: 30px;
    }

    .category-card {
        display: inline-block;
        margin-right: 20px;
        width: 300px;
        /* Set a fixed width for the cards */
        height: 200px;
        /* Set a fixed height for the cards */
    }

    .card-body {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 100%;
        /* Ensure the card body takes the full height of the card */
    }
    </style>
</head>

<body class="bg-dark text-white">
    <%- include('nav') %>
    <div class="container mt-5">
        <h1 class="text-center">All Categories</h1>
        <% categories.forEach(category => { %>
        <% if (entries[category.id]) { %>
        <div class="category-section">
            <div class="row">
                <div class="col-sm-6">
                    <h2>
                        <%= category.categoryname %>
                    </h2>
                </div>
                <div class="col-sm-6">
                    <!-- Sort By Dropdown -->
                    <!-- <div class="sort-container mb-3">
                        <label for="sort-options-<%= category.id %>" class="form-label">Sort By:</label>
                        <select id="sort-options-<%= category.id %>" class="form-select" onchange="sortEntries('<%= category.id %>')">
                            <option value="new" selected>New</option>
                            <option value="old">Old</option>
                            <option value="title">Title</option>
                            <option value="viewcount">View Count</option>
                        </select>
                    </div> -->
                </div>
            </div>
                <div class="category-row">
                    <% entries[category.id].forEach(entry => { %>
                    <div class="card category-card bg-light text-dark">
                        <div class="card-body">
                            <h5 class="card-title">
                                <%= entry.title %>
                            </h5>
                            <p class="card-text">
                                <%= entry.createdate.toDateString() %>
                            </p>
                            <a href="/post/<%= category.id %>/<%= entry.pp_id %>" class="btn btn-primary">Read More</a>
                        </div>
                    </div>
                    <% }); %>
                </div>
            </div>
            <% } %>
            <% }); %>
        </div>
</body>
    <!--  <script>
        function sortEntries(categoryId) {
            const sortBy = document.getElementById(`sort-options-${categoryId}`).value;
            const categoryRow = document.getElementById(`category-row-${categoryId}`);

            // Perform sorting based on the selected option
            let entries = Array.from(categoryRow.querySelectorAll('.category-card'));

            entries.sort((a, b) => {
                let aValue, bValue;

                switch (sortBy) {
                    case 'new':
                        aValue = new Date(a.querySelector('.card-text').innerText);
                        bValue = new Date(b.querySelector('.card-text').innerText);
                        return bValue - aValue; // New first
                    case 'old':
                        aValue = new Date(a.querySelector('.card-text').innerText);
                        bValue = new Date(b.querySelector('.card-text').innerText);
                        return aValue - bValue; // Old first
                    case 'title':
                        aValue = a.querySelector('.card-title').innerText.toLowerCase();
                        bValue = b.querySelector('.card-title').innerText.toLowerCase();
                        return aValue.localeCompare(bValue);
                    case 'viewcount':
                        aValue = parseInt(a.dataset.viewcount, 10);
                        bValue = parseInt(b.dataset.viewcount, 10);
                        return bValue - aValue; // Higher view count first
                }
            });

            entries.forEach(entry => categoryRow.appendChild(entry)); // Re-append sorted entries
        }
    </script> -->

</html>